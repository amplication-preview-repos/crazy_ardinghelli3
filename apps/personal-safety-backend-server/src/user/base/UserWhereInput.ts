/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { AlertListRelationFilter } from "../../alert/base/AlertListRelationFilter";
import { ValidateNested, IsOptional } from "class-validator";
import { Type } from "class-transformer";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { EmergencyContactListRelationFilter } from "../../emergencyContact/base/EmergencyContactListRelationFilter";
import { EmotionRecognitionListRelationFilter } from "../../emotionRecognition/base/EmotionRecognitionListRelationFilter";
import { StringFilter } from "../../util/StringFilter";
import { LocationListRelationFilter } from "../../location/base/LocationListRelationFilter";
import { VoiceCommandListRelationFilter } from "../../voiceCommand/base/VoiceCommandListRelationFilter";

@InputType()
class UserWhereInput {
  @ApiProperty({
    required: false,
    type: () => AlertListRelationFilter,
  })
  @ValidateNested()
  @Type(() => AlertListRelationFilter)
  @IsOptional()
  @Field(() => AlertListRelationFilter, {
    nullable: true,
  })
  alerts?: AlertListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  email?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => EmergencyContactListRelationFilter,
  })
  @ValidateNested()
  @Type(() => EmergencyContactListRelationFilter)
  @IsOptional()
  @Field(() => EmergencyContactListRelationFilter, {
    nullable: true,
  })
  emergencyContacts?: EmergencyContactListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => EmotionRecognitionListRelationFilter,
  })
  @ValidateNested()
  @Type(() => EmotionRecognitionListRelationFilter)
  @IsOptional()
  @Field(() => EmotionRecognitionListRelationFilter, {
    nullable: true,
  })
  emotionRecognitions?: EmotionRecognitionListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  firstName?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  lastName?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => LocationListRelationFilter,
  })
  @ValidateNested()
  @Type(() => LocationListRelationFilter)
  @IsOptional()
  @Field(() => LocationListRelationFilter, {
    nullable: true,
  })
  locations?: LocationListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  username?: StringFilter;

  @ApiProperty({
    required: false,
    type: () => VoiceCommandListRelationFilter,
  })
  @ValidateNested()
  @Type(() => VoiceCommandListRelationFilter)
  @IsOptional()
  @Field(() => VoiceCommandListRelationFilter, {
    nullable: true,
  })
  voiceCommands?: VoiceCommandListRelationFilter;
}

export { UserWhereInput as UserWhereInput };
